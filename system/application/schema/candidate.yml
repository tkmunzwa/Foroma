Candidate:
#  inheritance:
#    extends: Contact
#    type: concrete
  columns:
    gender: string(16)
    nationality: string(255)
    residence: string(255)
    dateofbirth: date
    ethnicity_id: integer(3)
    maritalstatus_id: integer(3)
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    contact_id:
      type: integer(4)
      notnull: true   
  relations:
    Ethnicity:
      alias: Ethnicity
      local: ethnicity_id
      foreign: id
      onDelete: RESTRICT
      onUpdate: CASCADE
    MaritalStatus:
      alias: MaritalStatus
      local: maritalstatus_id
      foreign: id
      onDelete: RESTRICT
      onUpdate: CASCADE
    Contact:
      local: contact_id
      foreign: id
      alias: Contact
      onDelete: CASCADE
      onUpdate: CASCADE

Ethnicity:
  columns:
    id:
      type: integer(3)
      autoincrement: true
      primary: true
    name:
      type: string(255)
      notnull: true

MaritalStatus:
  columns:
    id:
      type: integer(3)
      autoincrement: true
      primary: true
    name:
      type: string(255)
      notnull: true

Education:
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    #add more education columns
    candidate_id:
      type: integer(4)
      notnull: true
    dateobtained: date
    educationtype_id: integer(4)
    institutionname: string(255)
    examiner: string(255)
    result: string(255)
    educationname: string(255)
  relations:
    Candidate:
       local: candidate_id
       foreign: id
       onUpdate: CASCADE
       onDelete: CASCADE
    EducationType:
      local: educationtype_id
      foreign: id
      onDelete: RESTRICT
      onUpdate: CASCADE

EducationType:
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    name: string(255)
    level: int

WorkExperience:
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    candidate_id: integer(4)
    organisation: string(255)
    startDate: date
    endDate: date
    duties: clob(500)
  relations:
    Candidate:
      foreign: id
      local: candidate_id
      onUpdate: CASCADE
      onDelete: CASCADE

#for job skills, which are probably nested. Programming is a skill, which might have C++ and Java as children. Java may have J2EE as a child
Skill:
  actAs:
    NestedSet:
      hasManyRoots: true
      rootColumnName: root_id
  columns:
    name:
      type: string(255)
      notnull: true
    appproved: boolean
      
Location:
  actAs:
    NestedSet:
      hasManyRoots: true
      rootColumnName: root_id
  columns:
    name:
      type: string(255)
      notnull: true
    approved: boolean