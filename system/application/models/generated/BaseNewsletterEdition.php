<?php

/**
 * BaseNewsletterEdition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $subject
 * @property clob $body
 * @property timestamp $sent
 * @property integer $newsletter_id
 * @property enum $state
 * @property NewsletterModel $NewsletterModel
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7380 2010-03-15 21:07:50Z jwage $
 */
abstract class BaseNewsletterEdition extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('newsletter_edition');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sent', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('newsletter_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('state', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'draft',
              1 => 'sending',
              2 => 'sent',
              3 => 'paused',
             ),
             'default' => 'draft',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NewsletterModel', array(
             'local' => 'newsletter_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}