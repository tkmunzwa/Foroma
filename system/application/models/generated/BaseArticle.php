<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $language
 * @property date $publishdate
 * @property date $expirydate
 * @property clob $leadtext
 * @property clob $body
 * @property integer $id
 * @property integer $author_id
 * @property User $Author
 * @property Doctrine_Collection $Tags
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseArticle extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('language', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('publishdate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('expirydate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('leadtext', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        $this->hasOne('User as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Tag as Tags', array(
             'refClass' => 'ArticleTag',
             'local' => 'article_id',
             'foreign' => 'tag_id'));
    }
}